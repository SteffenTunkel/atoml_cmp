# Field:       name
# Description: name of the test, should be unique (duplicate name within same package+framework will lead to problems)

# Field:       type
# Description: type of the algorithm
# Supported values:
#  - classification
#  - clustering+regression planned

# Field:       framework
# Description: Machine learning framework that where the current algorithm is defined
# Supported values:
#  - weka
#  - spark
#  - sklearn

# Field:       package
# Description: package in which the algorithm is implemented

# Field:       class
# Description: name of the class that implements the algorithm

# Field:       features
# Description: defines which features can be used for the training with this algorithm, can be a list if multiple feature types are supported
# Supported values:
#  - DOUBLE          all double values (Java)
#  - FLOAT           all float values (Java)
#  - POSITIVEDOUBLE  positive double values (Java)
#  - POSITIVEFLOAT   positive float values (Java)
#  - UNIT            floating point numbers in [0,1]
#  - CATEGORICAL      categorical data

# Field:       properties
# Description: Defines which properties the algorithm should fulfill.
# supported properties:
#  - same      re-train with the same data --> expect classes/scores to be the same
#  - scramble  re-train with randomly reordered instances --> expect classes/scores to be the same
#  - reorder   re-train with randomly reordered features --> expect classes/scores to be the same
#  - const     re-train with +1 added to all numeric features --> expect classes/scores to be the same
#  - opposite  re-train with all class labels flipped --> expect classes to be the same, scores inverted (1-priorScore)
# supported evaluations:
#  - score_exact scores must be exactly the same after re-training
#  - class_exact classifications must be exactly the same after re-training
#  - class_stat  classifications must not be significantly different from expectation after re-training (chi-squared test)
#  - score_stat  scores of distributionForInstance must not be significantly different from expectation after re-training (KS test)
#  - clust_exact clusters must be exactly the same after re-training
#  - clust_stat  clusters must not be significantly different from expectation after re-training

# Field:       parameters
# Description: List of relevant hyper parameters of the algorithm.
#               Every parameter must specify a default value; the default value can be different from the default in the application
# Supported parameter types:
#  - double     double values; if min, max, and stepsize are defined these values will be tested together with the default values of all other parameters
#  - integer    integer values; if min, max, and stepsize are defined these values will be tested together with the default values of all other parameters
#  - flag       flag that is either enabled or disabled; both will be tested with the default values of the other parameters
#  - fixedflag  a flag that is always used with the default value - probably only makes sense with the value enabled.
#  - values     list of values that will be tested with the default values of the other parameters

####################
# Weka Clustering Algorithms #
####################

# clusterers from the package weka.clusterers

name: WEKA_CANOPY
type: clustering
framework: weka
package: weka.clusterers
class: Canopy
features: [double,categorical]
properties:
  same: clust_exact
  scramble: clust_stat
  reorder: clust_stat
  const: clust_stat
  opposite: clust_exact
parameters:
  N: # number of clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  max-candidates: # maximum number of candidates to remain in memory during training
    type: integer
    min: 100
    max: 300
    stepsize: 100
    default: 100
  periodic-pruning: # how often to prune low density canopies during training
    type: integer
    min: 200
    max: 400
    stepsize: 100
    default: 300
  min-density: # minimum T2-based density below which canopy is pruned during periodic pruning
    type: double
    min: 2.0
    max: 4.0
    stepsize: 1.0
    default: 2.0
  t2: # T2 distance
    type: double
    min: -1.0
    max: 3.0
    stepsize: 2.0
    default: -1.0
  t1: # T1 distance
    type: double
    min: 0.5
    max: 1.5
    stepsize: 1.0
    default: -1.25
  M: # do not replace missing values with means
    type: flag
    default: disabled
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---

name: WEKA_COBWEB
type: clustering
framework: weka
package: weka.clusterers
class: Cobweb
features: [double,categorical]
properties:
  same: clust_exact
  scramble: clust_exact
  reorder: clust_stat
  const: clust_stat
  opposite: clust_exact
parameters:
  A: # minimum standard deviation for numeric attributes
    type: double
    min: 0.5
    max: 1.5
    stepsize: 0.5
    default: 1.0
  C: # category utility threshold by which to prune nodes
    type: double
    min: 0.001
    max: 0.011
    stepsize: 0.005
    default: 0.0028
  save-data: # save instances information for visualization purpose
    type: flag
    default: disabled
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---

name: WEKA_EM
type: clustering
framework: weka
package: weka.clusterers
class: EM
features: [double,categorical]
properties:
  same: clust_exact
  scramble: score_stat
  reorder: score_stat
  const: score_stat
  opposite: clust_exact
parameters:
  I: # max number of iterations
    type: integer
    min: 100
    max: 200
    stepsize: 100
    default: 100
  N: # number of clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  X: # number of folds to use when cross-validating to find best number of clusters
    type: integer
    min: 2
    max: 10
    stepsize: 4
    default: 10
  max: # maximum number of clusters to consider during cross-validating
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  ll-cv: # minimum improvement in cross-validated log likelihood required to consider increasing number of clusters during cross-validation
    type: double
    min: 1.0E-6
    max: 1.0E-5
    stepsize: 4.5E-6
    default: 1.0E-6
  ll-iter: # minimum improvement in log likelihood required to perform another iteration of E and M steps
    type: double
    min: 1.0E-6
    max: 1.0E-5
    stepsize: 4.5E-6
    default: 1.0E-6
  M: # minimum allowable standard deviation
    type: double
    min: 1.0E-6
    max: 1.0E-5
    stepsize: 4.5E-6
    default: 1.0E-6
  K: # number of kMeans runs to perform
    type: integer
    min: 2
    max: 10
    stepsize: 4
    default: 10
  O: # model output in old format
    type: flag
    default: disabled
  num-slots: # number of execution slots (threads) to use
    type: integer
    min: 1
    max: 2
    stepsize: 1
    default: 1
#  S: # random number seed to be used
#    type: integer
#    min: 0
#    max: 42
#    stepsize: 21
#    default: 42
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---

name: WEKA_FARTHESTFIRST
type: clustering
framework: weka
package: weka.clusterers
class: FarthestFirst
features: [double,categorical]
properties:
  same: clust_exact
  scramble: clust_exact
  reorder: clust_stat
  const: clust_stat
  opposite: clust_exact
parameters:
  N: # number of clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
#  S: # random number seed to be used
#    type: integer
#    min: 0
#    max: 50
#    stepsize: 10
#    default: 1
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---

name: WEKA_HIERARCHICALCLUSTERER
type: clustering
framework: weka
package: weka.clusterers
class: HierarchicalClusterer
features: [double,categorical]
properties:
  same: clust_exact
  scramble: clust_exact
  reorder: clust_stat
  const: clust_stat
  opposite: clust_exact
parameters:
  N: # number of clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  L: # method used to measure distance between two clusters
    type: values
    values: [SINGLE, COMPLETE, AVERAGE, MEAN, CENTROID, WARD, ADJCOMPLETE, NEIGHBOR_JOINING]
    default: SINGLE
  P: # indicates if cluster should be printed in Newick format
    type: flag
    default: enabled
  B: # if false, distance between clusters is interpreted as height of the node linking the clusters
    type: flag
    default: disabled
  A: # distance function
    type: values
    values: ["weka.core.EuclideanDistance -R first-last", "weka.core.ChebyshevDistance -R first-last",
             "weka.core.FilteredDistance -R first-last -F \\\\\"weka.filters.unsupervised.attribute.RandomProjection -N 10 -R 42 -D Sparse1\\\\\" -D \\\\\"weka.core.EuclideanDistance -R first-last\\\\\"",
             "weka.core.ManhattanDistance -R first-last", "weka.core.MinkowskiDistance -P 2.0 -R first-last"]
    default: "weka.core.EuclideanDistance -R first-last"
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---

name: WEKA_SIMPLEKMEANS
type: clustering
framework: weka
package: weka.clusterers
class: SimpleKMeans
features: [double,categorical]
properties:
  same: clust_exact
  scramble: clust_exact
  reorder: clust_stat
  const: clust_stat
  opposite: clust_exact
parameters:
  init: # initialization method to use
    type: integer
    min: 0
    max: 3
    stepsize: 1
    default: 0
  C: # use canopy clustering to reduce comparisons during kMeans algorithm
    type: flag
    default: enabled
  max-candidates: # if canopy clustering: maximum number of candidates to remain in memory during training of canopy clusterer
    type: integer
    min: 100
    max: 200
    stepsize: 100
    default: 100
  periodic-pruning: # if canopy clustering: how often to prune low density canopies during training
    type: integer
    min: 100
    max: 1000
    stepsize: 450
    default: 1000
  min-density: # if canopy clustering: minimum T2-based density below which canopy is pruned during periodic pruning
    type: double
    min: 0.0
    max: 4.0
    stepsize: 2.0
    default: 2.0
  t1: # if canopy clustering: T1 distance
    type: double
    min: -1.25
    max: 1.25
    stepsize: 2.5
    default: -1.25
  t2: # if canopy clustering: T2 distance
    type: double
    min: -1.0
    max: 1.0
    stepsize: 2.0
    default: -1.0
  V: # display standard deviations
    type: flag
    default: disabled
  M: # do not replace missing values with means
    type: flag
    default: disabled
  N: # number of clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  A: # distance function to use for instances comparison
    type: values
    values: ["weka.core.EuclideanDistance -R first-last", "weka.core.ManhattanDistance -R first-last"]
    default: "weka.core.EuclideanDistance -R first-last"
  I: # maximum number of iterations
    type: integer
    min: 100
    max: 900
    stepsize: 400
    default: 500
  O: # preserve order of instances
    type: flag
    default: disabled
  fast: # use cutoff values for speeding up distance calculation
    type: flag
    default: disabled
  num-slots: # number of execution slots (threads) to use
    type: integer
    min: 1
    max: 2
    stepsize: 1
    default: 1
#  S: # random number seed to be used
#    type: integer
#    min: 0
#    max: 42
#    stepsize: 21
#    default: 42
#  output-debug-info: # true: clusterer outputs additional information to console
#    type: flag
#    default: disabled
#  do-not-check-capabilities: # true: clusterer capabilities are not checked before building clusterer (to reduce runtime)
#    type: flag
#    default: disabled
---