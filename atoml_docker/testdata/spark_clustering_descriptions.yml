# Field:       name
# Description: name of the test, should be unique (duplicate name within same package+framework will lead to problems)

# Field:       type
# Description: type of the algorithm
# Supported values:
#  - classification
#  - clustering+regression planned

# Field:       framework
# Description: Machine learning framework that where the current algorithm is defined
# Supported values:
#  - weka
#  - spark
#  - sklearn

# Field:       package
# Description: package in which the algorithm is implemented

# Field:       class
# Description: name of the class that implements the algorithm

# Field:       features
# Description: defines which features can be used for the training with this algorithm, can be a list if multiple feature types are supported
# Supported values:
#  - DOUBLE          all double values (Java)
#  - FLOAT           all float values (Java)
#  - POSITIVEDOUBLE  positive double values (Java)
#  - POSITIVEFLOAT   positive float values (Java)
#  - UNIT            floating point numbers in [0,1]
#  - CATEGORICAL      categorical data

# Field:       properties
# Description: Defines which properties the algorithm should fulfill.
# supported properties:
#  - same      re-train with the same data --> expect classes/scores to be the same
#  - scramble  re-train with randomly reordered instances --> expect classes/scores to be the same
#  - reorder   re-train with randomly reordered features --> expect classes/scores to be the same
#  - const     re-train with +1 added to all numeric features --> expect classes/scores to be the same
#  - opposite  re-train with all class labels flipped --> expect classes to be the same, scores inverted (1-priorScore)
# supported evaluations:
#  - score_exact scores must be exactly the same after re-training
#  - class_exact classifications must be exactly the same after re-training
#  - class_stat  classifications must not be significantly different from expectation after re-training (chi-squared test)
#  - score_stat  scores of distributionForInstance must not be significantly different from expectation after re-training (KS test)
#  - clust_exact clusters must be exactly the same after re-training
#  - clust_stat  clusters must not be significantly different from expectation after re-training

# Field:       parameters
# Description: List of relevant hyper parameters of the algorithm.
#               Every parameter must specify a default value; the default value can be different from the default in the application
# Supported parameter types:
#  - double     double values; if min, max, and stepsize are defined these values will be tested together with the default values of all other parameters
#  - integer    integer values; if min, max, and stepsize are defined these values will be tested together with the default values of all other parameters
#  - flag       flag that is either enabled or disabled; both will be tested with the default values of the other parameters
#  - fixedflag  a flag that is always used with the default value - probably only makes sense with the value enabled.
#  - values     list of values that will be tested with the default values of the other parameters

####################
# Apache Spark Clustering Algorithms #
####################

name: SPARK_KMEANS
framework: spark
type: clustering
package:  org.apache.spark.ml.clustering
class: KMeans
features: double
properties:
  same: clust_exact
  scramble: clust_stat
  reorder: clust_stat
  const: clust_stat
parameters:
  k: # number of desired clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  maxIter: # maximum number of iterations to run
    type: integer
    min: 0
    max: 100
    stepsize: 50
    default: 50
  initMode: # either random or k-means initialization
    type: values
    values: [random, k-means||]
    default: k-means||
  initSteps: # number of steps in the k-means|| algorithm
    type: integer
    min: 1
    max: 3
    stepsize: 1
    default: 2
  tol: # distance threshold determining whether k-means has converged
    type: double
    min: 0.0
    max: 1.0
    stepsize: 0.5
    default: 0.5
  distanceMeasure: # distance measure to use
    type: values
    values: [euclidean, cosine]
    default: euclidean
---

name: SPARK_GAUSSIAN # Gaussian Mixture Model Clustering
framework: spark
type: clustering
package:  org.apache.spark.ml.clustering
class: GaussianMixture
features: double
properties:
  same: clust_exact
  scramble: score_stat
  reorder: clust_stat
  const: score_stat
parameters:
  k: # number of desired clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  maxIter: # maximum number of iterations to run
    type: integer
    min: 0
    max: 100
    stepsize: 50
    default: 50
  tol: # maximum change in log-likelihood at which convergence is considered to be achieved
    type: double
    min: 0.1
    max: 0.3
    stepsize: 0.1
    default: 0.2
---

#name: SPARK_PIC # Power Iteration Clustering (PIC) not fully support since in experimental mode in Spark
#framework: spark
#type: clustering
#package:  org.apache.spark.ml.clustering
#class: PowerIterationClustering
#features: double
#properties:
#  same: clust_exact
#  scramble: clust_stat
#  opposite: clust_exact
#parameters:
#  k: # number of desired clusters
#    type: integer
#    min: 2
#    max: 4
#    stepsize: 1
#    default: 2
#  maxIter: # maximum number of iterations to run
#    type: integer
#    min: 0
#    max: 150
#    stepsize: 50
#    default: 50
#---

name: SPARK_BISECTING_KMEANS
framework: spark
type: clustering
package:  org.apache.spark.ml.clustering
class: BisectingKMeans
features: double
properties:
  same: clust_exact
  scramble: clust_stat
  reorder: clust_stat
  const: clust_stat
parameters:
  k: # number of desired clusters
    type: integer
    min: 2
    max: 4
    stepsize: 1
    default: 2
  maxIter: # maximum number of iterations to run
    type: integer
    min: 0
    max: 100
    stepsize: 50
    default: 50
  minDivisibleClusterSize: # the minimum number (if >= 1.0) or minimum proportion of points (if < 1.0) of a divisible cluster
    type: double
    min: 0.5
    max: 1.5
    stepsize: 0.5
    default: 1.0
---
