    @Test
    public void test_<<<NAME>>>() throws Exception {
        for(int iter=1; iter<=<<<ITERATIONS>>>; iter++) {
        	<<<MYSQLEVALSMOKE_START>>>Dataset<Row> dataframe = arffToDataset("/smokedata/<<<NAME>>>_" + iter + "_training.arff");
            Dataset<Row> testdata = arffToDataset("/smokedata/<<<NAME>>>_" + iter + "_test.arff");
            
            <<<CLASSIFIER>>> classifier = new <<<CLASSIFIER>>>();
            classifier.setLabelCol("classAtt");
            try {
            	Method setSeedMethod = classifier.getClass().getMethod("setSeed", long.class);
            	setSeedMethod.invoke(classifier, 42);
            } catch (NoSuchMethodException | SecurityException e) {
            	// not randomized
            }
            setParameters(classifier, parameters);
            
            ClassificationModel<?, ?> model = classifier.fit(dataframe);
            Dataset<Row> pred = model.transform(testdata);

            // create a csv file
            try {
                File myObj = new File("/log/pred_<<<IDENTIFIER>>>_<<<NAME>>>.csv");
                if (myObj.createNewFile()) {
                    System.out.println("File created: " + myObj.getName());
                } else {
                    System.out.println("File already exists.");
                }
            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }

            // write in csv
            try {
                FileWriter myWriter = new FileWriter("/log/pred_<<<IDENTIFIER>>>_<<<NAME>>>.csv");
                // write header
                myWriter.write("actual,prediction,prob_0,prob_1\\n");
                // write predictions
                Dataset<Row> predSelect = pred.select("classAtt", "prediction", "probability");
                List<String> predString = predSelect.map((MapFunction<Row, String>) row -> row.mkString(","), Encoders.STRING()).collectAsList();
                for (String s : predString) {
                    myWriter.write(s.replace("[", "").replace("]", "") + '\\n');
                };
                myWriter.close();
                System.out.println("Successfully wrote to the file.");

            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }

            <<<MYSQLEVALSMOKE_END>>>
        }
    }

