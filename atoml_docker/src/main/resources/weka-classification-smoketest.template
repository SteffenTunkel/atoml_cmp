    @Test(timeout=21600000)
    public void test_<<<NAME>>>() throws Exception {
        for(int iter=1; iter<=<<<ITERATIONS>>>; iter++) {
            <<<MYSQLEVALSMOKE_START>>>Instances data = loadData("/smokedata/<<<NAME>>>_" + iter + "_training.arff");
            Instances testdata = loadData("/smokedata/<<<NAME>>>_" + iter + "_test.arff");
            Classifier classifier = AbstractClassifier.forName("<<<PACKAGENAME>>>.<<<CLASSIFIER>>>", Arrays.copyOf(parameters, parameters.length));
            classifier.buildClassifier(data);
            for (Instance instance : testdata) {
                classifier.classifyInstance(instance);
                classifier.distributionForInstance(instance);
            }
            // make predictions on full dataset
            Evaluation eval = null;
            try {
                eval = new Evaluation(data);
                eval.evaluateModel(classifier, testdata);
            } catch (Exception ex) {
            }
            ArrayList pred = eval.predictions();

            // create a csv file
            try {
                File outFile = new File("predictions/pred_<<<IDENTIFIER>>>_<<<NAME>>>.csv");
                if (outFile.createNewFile()) {
                    System.out.println("File created: " + outFile.getName());
                } else {
                    System.out.println("File already exists: " + outFile.getName());
                }
            } catch (IOException e) {
                System.out.println("An error occurred while creating the output file.");
                e.printStackTrace();
            }

            // write in csv
            try {
                FileWriter outWriter = new FileWriter("predictions/pred_<<<IDENTIFIER>>>_<<<NAME>>>.csv");
                // write header
                outWriter.write("type,actual,prediction,weigth,prob_0,prob_1\\n");
                // write predictions
                for (Object i : pred) {
                    outWriter.write(i.toString().replace(" ", ",") + '\\n');
                };
                outWriter.close();
                System.out.println("Successfully wrote to the file.");

            } catch (IOException e) {
                System.out.println("An error occurred while writing to the output file.");
                e.printStackTrace();
            }

            <<<MYSQLEVALSMOKE_END>>>
        }
    }

